generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ———————– MODELS PRINCIPAIS ———————– ///

model Brand {
  id       Int       @id @default(autoincrement())
  slug     String    @unique
  consoles Console[]
}

model Console {
  id          Int              @id @default(autoincrement())
  brandId     Int
  brand       Brand            @relation(fields: [brandId], references: [id])
  slug        String           @unique // ex.: 'playstation-5'
  nickname    String           @unique // ex.: 'ps5'
  releaseDate DateTime? // data oficial de lançamento
  generation  Int? // Alterado para um número
  type        String? // Novo campo: desktop, portátil ou híbrido
  variants    ConsoleVariant[]
  accessories Accessory[]
  GameEdition GameEdition[]
  UserItem    UserItem[]
  UserConsole UserConsole[]

  // 1:N → Traduções de nome e descrição
  translations ConsoleTranslation[]
}

model ConsoleVariant {
  id         Int       @id @default(autoincrement())
  // name        String        // → removido daqui, agora fica em ConsoleVariantTranslation
  slug       String
  console    Console   @relation(fields: [consoleId], references: [id])
  consoleId  Int
  // Não migramos a descrição, pois não há campo “description” no seu modelo. Se futuramente adicionar "description" no variant, deve ir para ConsoleVariantTranslation.
  launchDate DateTime? // data de lançamento dessa variação
  storage    String? // ex.: '500 GB', '1 TB'
  imageUrl   String? // foto oficial da variação

  Skin        Skin[]
  UserConsole UserConsole[]

  // 1:N → Traduções de nome
  translations ConsoleVariantTranslation[]

  @@unique([consoleId, slug])
}

model Skin {
  id               Int            @id @default(autoincrement())
  consoleVariantId Int
  consoleVariant   ConsoleVariant @relation(fields: [consoleVariantId], references: [id])
  slug             String         @unique // ex.: 'midnight-black'
  // translations     SkinTranslation[] // já existia
  UserConsole      UserConsole[]

  // Removi o description daqui para movê-lo à SkinTranslation:
  // description      String?       // texto descritivo → vai para SkinTranslation
  releaseDate    DateTime? // data de lançamento oficial da skin
  limitedEdition Boolean? // true se edição limitada/colecionador
  editionName    String? // nome oficial da edição limitada (→ pode ser multilíngue)
  material       String? // ex.: 'Plástico ABS', 'Vinil adesivo'
  finish         String? // ex.: 'Matte', 'Glossy', etc.
  imageUrl       String? // URL da imagem principal

  // 1:N → Traduções de nome e descrição/editionName
  translations SkinTranslation[]
}

model Accessory {
  id           Int                    @id @default(autoincrement())
  consoleId    Int
  console      Console                @relation(fields: [consoleId], references: [id])
  slug         String                 @unique // ex.: 'dualsense-controller'
  translations AccessoryTranslation[]
}

model Game {
  id           Int               @id @default(autoincrement())
  slug         String            @unique // ex.: 'spider-man-2'
  translations GameTranslation[]
  editions     GameEdition[]
  UserItem     UserItem[]
}

model GameEdition {
  id        Int     @id @default(autoincrement())
  gameId    Int
  consoleId Int
  game      Game    @relation(fields: [gameId], references: [id])
  console   Console @relation(fields: [consoleId], references: [id])
  coverUrl  String?

  @@unique([gameId, consoleId])
}

model User {
  id                            Int           @id @default(autoincrement())
  name                          String
  email                         String        @unique
  profileImage                  String? // URL da imagem de perfil
  password                      String?
  description                   String?
  items                         UserItem[]
  UserConsole                   UserConsole[]
  role                          Role          @default(NORMAL)
  emailVerified                 Boolean       @default(false)
  emailVerificationToken        String?
  emailVerificationTokenExpires DateTime?
  passwordResetToken            String?
  passwordResetTokenExpires     DateTime?
}

model UserItem {
  id         Int        @id @default(autoincrement())
  userId     Int
  gameId     Int
  consoleId  Int
  status     ItemStatus
  customName String?
  photoUrl   String?
  createdAt  DateTime   @default(now())
  user       User       @relation(fields: [userId], references: [id])
  game       Game       @relation(fields: [gameId], references: [id])
  console    Console    @relation(fields: [consoleId], references: [id])
}

model UserConsole {
  id               Int      @id @default(autoincrement())
  userId           Int
  consoleId        Int
  consoleVariantId Int
  skinId           Int? // opcional
  customSkin       String?
  note             String?
  photoUrl         String?
  createdAt        DateTime @default(now())

  user    User           @relation(fields: [userId], references: [id])
  console Console        @relation(fields: [consoleId], references: [id])
  variant ConsoleVariant @relation(fields: [consoleVariantId], references: [id])
  skin    Skin?          @relation(fields: [skinId], references: [id])
}

enum ItemStatus {
  OWNED
  SELLING
  WISHLIST
}

enum Role {
  NORMAL
  ADMIN
  SUPER_ADMIN
}

/// ———————– MODELS DE TRADUÇÃO ———————– ///

model ConsoleTranslation {
  id          Int     @id @default(autoincrement())
  consoleId   Int
  console     Console @relation(fields: [consoleId], references: [id])
  locale      String // ex.: 'pt', 'en', 'es'
  name        String // ex.: 'PlayStation 4' ou 'PlayStation Quarta Geração'
  description String? // descrição em cada idioma

  @@unique([consoleId, locale])
  @@index([locale])
}

model ConsoleVariantTranslation {
  id               Int            @id @default(autoincrement())
  consoleVariantId Int
  variant          ConsoleVariant @relation(fields: [consoleVariantId], references: [id])
  locale           String // ex.: 'pt', 'en'
  name             String // ex.: 'Slim' ou 'Slim Cortado'
  // Se no futuro você adicionar um campo “description” a ConsoleVariant, inclua-o aqui:
  // description      String?

  @@unique([consoleVariantId, locale])
  @@index([locale])
}

model SkinTranslation {
  id          Int     @id @default(autoincrement())
  skinId      Int
  skin        Skin    @relation(fields: [skinId], references: [id])
  locale      String // 'pt' ou 'en'
  name        String // ex.: 'Preto Meia-Noite', 'Midnight Black'
  // Removemos o campo "description" de Skin (modelo principal) e adicionamos aqui:
  description String? // texto descritivo da skin, em cada idioma
  // Se editionName também precisa ser multilíngue, adicionamos aqui:
  editionName String? // ex.: 'Edição Limitada Zen', 'Zen Limited Edition'

  @@unique([skinId, locale])
  @@index([locale])
}

model AccessoryTranslation {
  id          Int       @id @default(autoincrement())
  accessoryId Int
  accessory   Accessory @relation(fields: [accessoryId], references: [id])
  locale      String // 'pt' ou 'en'
  name        String // ex.: 'Controle DualSense', 'DualSense Controller'
  description String?

  @@unique([accessoryId, locale])
  @@index([locale])
}

model GameTranslation {
  id          Int     @id @default(autoincrement())
  gameId      Int
  game        Game    @relation(fields: [gameId], references: [id])
  locale      String // 'pt' ou 'en'
  title       String // ex.: 'Homem-Aranha 2', 'Spider-Man 2'
  description String?

  @@unique([gameId, locale])
  @@index([locale])
}
